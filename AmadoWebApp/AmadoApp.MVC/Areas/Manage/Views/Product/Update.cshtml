@using AmadoApp.Business.ViewModels.ProductVMs
@using AmadoApp.Core.Entities
@model UpdateProductVM


<div class="container">
    <h4 class="mb-5">Category Create</h4>
    <form method="post" enctype="multipart/form-data">
        <div class="col-4">
            <div class="mb-3">
                <label asp-for="Title" class="form-label">Product Title</label>
                <input asp-for="Title" class="form-control">
            </div>
        </div>
        <div class="col-4">
            <div class="mb-3">
                <label asp-for="Price" class="form-label">Product Price</label>
                <input asp-for="Price" class="form-control">
            </div>
        </div>
        <div class="col-4">
            <div class="mb-3">
                <label asp-for="IsInStock" class="form-label">Product Is In Stock</label>
                <input asp-for="IsInStock" class="form-control">
            </div>
        </div>
        <div class="col-4">
            <label asp-for="BrandId" class="form-label">Product Brand</label>
            <select asp-for="BrandId" asp-items="new SelectList(Model.Brands, nameof(Brand.Id), nameof(Brand.Name))" class="form-select mx-3">
                <option value="null">Choose Brand</option>
            </select>
        </div>
        <div class="col-4">
            <label asp-for="ColorIds" class="form-label">Product Colors</label>
            <br />
            <select asp-for="ColorIds" asp-items="new SelectList(Model.Colors, nameof(Color.Id), nameof(Color.Name))" class="form-select mx-3">
            </select>
        </div>
        <div class="col-4">
            <label asp-for="CategoryIds" class="form-label">Product Categories</label>
            <br />
            <select asp-for="CategoryIds" asp-items="new SelectList(Model.Categories, nameof(Category.Id), nameof(Category.Name))" class="form-select mx-3">
            </select>
        </div>
        <div class="col-4">
            <div class="mb-3">
                <label asp-for="Description" class="form-label">Product Description</label>
                <input asp-for="Description" class="form-control">
            </div>
        </div>
        <div class="col-12 mt-3 mx-3">
            <label asp-for="ProductFiles" class="form-label">Product Images</label>
            <div class="row align-items-start">
                @foreach (var item in Model.ProductImageVMs.ToList())
                {
                    <div class="col-2 mb-3 position-relative">
                        <button type="button" class="btn btn-danger del-img-btn position-absolute top-0 start-0">X</button>
                        <img style="width: 100%; height: 200px; border-radius: 5px;" src="~/Upload/ProductImages/@item.ImageUrl" />
                        <input type="hidden" value="@item.Id" name="ProductImageIds" />
                    </div>
                }
            </div>
        </div>
        <div class="col-4 mb-5">
            <label asp-for="ProductFiles" class="form-label">Product Images</label>
            <input asp-for="ProductFiles" class="form-control">
        </div>

        <div class="mt-4 mb-4" asp-validation-summary=All></div>

        <a asp-action="Table" asp-controller="Product" class="mt-4">
            <button type="submit" class="btn btn-primary">Submit</button>
            <a asp-controller="Product" asp-action="Table" class="btn btn-secondary">Cancel</a>
        </a>
    </form>
</div>

<script>
    let btn = document.querySelectorAll(".del-img-btn")

    btn.forEach(b => {
        b.addEventListener("click", function () {
            b.parentElement.remove();
        });
    });

</script>